plugins {
	id "com.github.johnrengelman.shadow" version "7.1.2"
	id "com.modrinth.minotaur" version "2.+"
}
architectury {
	platformSetupLoomIde()
	fabric()
}
loom {
	accessWidenerPath = project(":common").loom.accessWidenerPath
}
configurations {
	common
	shadowCommon
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentFabric.extendsFrom common
}
dependencies {
	modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
	modApi "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"
	common(project(path: ":common", configuration: "namedElements")) {
		transitive false
	}
	shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) {
		transitive false
	}

	// Architectury-api
	modApi "dev.architectury:architectury-fabric:${architectury_version}"
	// MixinExtras
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${fabric_mixin_extras_version}")))
	// Cloth Config API
	modApi("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_api_version}") {
		exclude(group: "net.fabricmc.fabric-api")
		exclude module: 'modmenu'
	}
	// ModMenu
	modImplementation("com.terraformersmc:modmenu:${modmenu_version}")
}
shadowJar {
	exclude "architectury.common.json"
	configurations = [project.configurations.shadowCommon]
	archiveClassifier = "dev-shadow"
}
remapJar {
	injectAccessWidener = true
	input.set shadowJar.archiveFile
	dependsOn shadowJar
}
sourcesJar {
	def commonSources = project(":common").sourcesJar
	dependsOn commonSources
	from commonSources.archiveFile.map {
		zipTree(it)
	}
}
base {
	archivesName = rootProject.archiveFileNameOfPlatform("fabric")
	version = ""
}
components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}
publishing {
	publications {}
	repositories {}
}


// https://github.com/modrinth/minotaur/blob/a151c425fb128cd5384242f25b6fbb0a1d18e325/README.md
modrinth {
	debugMode = Boolean.parseBoolean(publish_debug_mode)
	token = System.getenv("MODRINTH_TOKEN")
	projectId = modrinth_project_id
	versionNumber = mod_version
	versionType = mod_version_type
	versionName = "${mod_version}-mc${minecraft_version}-fabric"
	changelog = readChangeLog()
	uploadFile = remapJar
	autoAddDependsOn = false
	dependencies {
		required.project "fabric-api"
		required.project "architectury-api"
		optional.project "modmenu"
		optional.project "cloth-config"
	}
}
